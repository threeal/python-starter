name: build
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
jobs:
  project:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0

      - name: Setup Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.11

      - name: Get pipx variables
        id: pipx_vars
        shell: bash
        run: |
          echo "version=$(pipx --version)" >> $GITHUB_OUTPUT
          echo "bin_dir=$(pipx environment -v PIPX_BIN_DIR)" >> $GITHUB_OUTPUT
          echo "local_venvs=$(pipx environment -v PIPX_LOCAL_VENVS)" >> $GITHUB_OUTPUT

      - name: Cache Poetry
        id: cache_poetry
        uses: actions/cache@v3.3.2
        with:
          path: |
            ${{ steps.pipx_vars.outputs.bin_dir }}/poetry*
            ${{ steps.pipx_vars.outputs.local_venvs }}/poetry
          key: pipx-${{ steps.pipx_vars.outputs.version }}-poetry-${{ runner.os }}

      - name: Setup Poetry
        if: steps.cache_poetry.outputs.cache-hit != 'true'
        run: pipx install poetry

      - name: Install deps
        run: poetry install --with dev

      - name: Check format
        run: |
          poetry run isort lib
          poetry run black lib
          git diff --exit-code HEAD

      - name: Check lint
        run: poetry run flake8 lib

      - name: Run module
        run: poetry run starter 10
