name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows, ubuntu, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: 3.11

      - name: Setup Poetry
        uses: threeal/setup-poetry-action@v1.0.0

      - name: Cache deps
        id: cache_deps
        uses: actions/cache@v3.3.2
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}

      - name: Install deps
        if: steps.cache_deps.outputs.cache-hit != 'true'
        run: poetry install --with dev

      - name: Check format
        run: poetry run poe format && git diff --exit-code HEAD

      - name: Check lint
        run: poetry run poe lint

      - name: Run testing
        run: poetry run poe test

      - name: Generate docs
        run: poetry run poe docs

      - name: Upload docs artifact
        if: ${{ matrix.os }} == 'ubuntu'
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          path: docs

  deploy:
    name: Deploy
    if: github.event_name != 'pull_request' && github.ref_name == 'main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: pages
      cancel-in-progress: false
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4.0.0

      - name: Deploy Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.5
